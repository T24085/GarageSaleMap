name: GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
      VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
      VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
      VITE_FIREBASE_STORAGE: ${{ secrets.VITE_FIREBASE_STORAGE }}
      VITE_FIREBASE_MSG_SENDER: ${{ secrets.VITE_FIREBASE_MSG_SENDER }}
      VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
      VITE_MAPTILER_KEY: ${{ secrets.VITE_MAPTILER_KEY }}
      VITE_BASE_PATH: /GarageSaleMap/
    steps:
      - name: Derive optional config
        id: derive
        run: |
          if [ -z "$VITE_FIREBASE_PROJECT_ID" ]; then
            echo "Missing VITE_FIREBASE_PROJECT_ID secret" >&2
            exit 1
          fi
          if [ -z "$VITE_FIREBASE_STORAGE" ]; then
            echo "Using default storage bucket ${VITE_FIREBASE_PROJECT_ID}.firebasestorage.app"
            echo "VITE_FIREBASE_STORAGE=${VITE_FIREBASE_PROJECT_ID}.firebasestorage.app" >> "$GITHUB_ENV"
          else
            echo "VITE_FIREBASE_STORAGE=$VITE_FIREBASE_STORAGE" >> "$GITHUB_ENV"
          fi
        shell: bash

      - name: Checkout
        uses: actions/checkout@v4

      - name: Verify configuration
        run: |
          for key in VITE_FIREBASE_API_KEY VITE_FIREBASE_AUTH_DOMAIN VITE_FIREBASE_PROJECT_ID VITE_FIREBASE_MSG_SENDER VITE_FIREBASE_APP_ID VITE_FIREBASE_STORAGE; do
            if [ -z "${!key}" ]; then
              echo "Missing required value: $key" >&2
              exit 1
            fi
          done
        shell: bash

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4